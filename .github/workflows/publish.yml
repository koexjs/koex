name: Publish NPM Package

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
 
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'

      # Runs a single command using the runners shell
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org
        
      - name: Cache Node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Install Dependencies
        run: |
          npm i
          npm run bootstrap
      
      - name: Make Build
        run: npm run build

      - name: Make Testing
        run: npm run test

      - name: Make Coverage
        run: npm run coverage

      - name: Before Deploy
        run: cp .npmrc.template .npmrc
        
      # Runs a set of commands using the runners shell
      - name: Make Deploy
        run: npx lerna publish --yes
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}